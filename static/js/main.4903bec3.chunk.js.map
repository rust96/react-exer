{"version":3,"sources":["containers/board-creator/board-creator.js","containers/board-creator/index.js","actions/index.js","constants/index.js","containers/board-item/index.js","containers/board-item/board-item.js","components/boards-row/index.js","components/boards-row/boards-row.js","components/main-page/index.js","components/main-page/main-page.js","components/page-not-found/index.js","components/page-not-found/page-not-found.js","containers/cell-creator/index.js","containers/cell-creator/cell-creator.js","containers/task-creator/index.js","containers/task-creator/task-creator.js","containers/task-item/index.js","containers/task-item/task-item.js","components/task-row/index.js","components/task-row/task-row.js","containers/list-row/last-task.js","containers/list-row/index.js","containers/list-row/list-row.js","components/board-page/index.js","components/board-page/board-page.js","components/app/index.js","components/app/app.js","localStorage.js","reducers/index.js","store.js","index.js"],"names":["BoardCreator","state","boardOpen","boardName","toggleCreating","_this","setState","onNameChange","e","target","value","saveBoard","props","createBoard","_this2","this","_this$state","react_default","a","createElement","className","type","onChange","onClick","Component","connect","dispatch","payload","BoardItem","_ref","title","id","remotePath","concat","react_router_dom","to","BoardsRow","boards","length","map","_ref2","idx","containers_board_item","key","MainPage","containers_board_creator","components_boards_row","PageNotFound","CellCreator","cellName","addMode","addNewList","_this$props","createList","currentBoardId","onCellChange","toggleAddMode","placeholder","TaskCreator","taskName","addTaskActive","toggleAddTask","onTaskChange","createTask","boardId","listIdx","TaskItem","elements","dragStart","dragEnter","dragEnd","currentDragIdx","dragMode","marginHeight","addList","lastTask","task","marginT","marginB","dragStyle","marginTop","marginBottom","Fragment","style","draggable","onDragStart","onDragEnter","onDragEnd","TaskRow","containers_task_item","Object","assign","LastTask","ListRow","editListIdx","rmTask","rmList","addTask","currentTarget","offsetHeight","onListDrag","onLastTaskEnter","lastTaskIdx","dragTask","_this$props$board","board","cells","c","fn","components_task_row","last_task","containers_task_creator","renderLists","BoardPage","match","params","currentBoard","find","b","containers_list_row","containers_cell_creator","components_page_not_found","App","react_router","path","component","exact","initialState","serializedState","localStorage","getItem","JSON","parse","err","loadState","reducer","arguments","undefined","action","newBoard","objectSpread","toConsumableArray","needBoard","newList","newBoardList","newBoards","slice","parseInt","needList","allCells","needCells","newCells","allNewCells","removedTask","choosenTasksArr","choosenTasksCell","newAddTasks","newCellAdd","newListsArray","newState","removingCell","newRmTasks","newRmCell","newRmLists","newRmBoard","newRmBoards","store","createStore","applyMiddleware","thunk","subscribe","stringify","setItem","console","log","saveState","getState","ReactDOM","render","es","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.4903bec3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createBoard } from '../../actions';\r\n\r\nclass BoardCreator extends Component {\r\n\r\n  state = {\r\n    boardOpen: false,\r\n    boardName: \"\"\r\n  }\r\n\r\n  toggleCreating = () => {\r\n    this.setState({ boardOpen: !this.state.boardOpen })\r\n  }\r\n\r\n  onNameChange = (e) => {\r\n    this.setState({ boardName: e.target.value })\r\n  }\r\n\r\n  saveBoard = () => {\r\n    this.props.createBoard(this.state.boardName);\r\n    this.setState({ boardName: '' })\r\n  }\r\n\r\n  render () {\r\n    const { boardOpen, boardName } = this.state;\r\n\r\n    if (boardOpen) {\r\n      return (\r\n        <div className=\"board-creator\">\r\n          <p className=\"board-creator__create\">Создаем доску...</p>\r\n\r\n          <input type=\"text\" className=\"board-creator__input\"\r\n            value={boardName}\r\n            onChange={this.onNameChange}\r\n          />\r\n\r\n          <div>\r\n            <button className=\"button button_cancel\" onClick={this.toggleCreating}>Отменить</button>\r\n            <button className=\"button button_save\" onClick={() => this.saveBoard()}>Сохранить</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"board-creator\">\r\n        <button className=\"button button_board-create\" onClick={this.toggleCreating}>Создать доску</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createBoard: (boardName) => {\r\n      dispatch(createBoard(boardName));\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(BoardCreator);\r\n","import BoardCreator from './board-creator';\r\n\r\nexport default BoardCreator;\r\n","import { CREATE_BOARD } from '../constants';\r\nimport { CREATE_LIST } from '../constants';\r\nimport { CREATE_TASK } from '../constants';\r\nimport { DRAG_TASK } from '../constants';\r\n\r\nexport const createBoard = (data) => {\r\n  return { type: CREATE_BOARD, payload: data }\r\n}\r\n\r\nexport const createList = (title, boardId) => {\r\n  return { type: CREATE_LIST, payload: title, boardId }\r\n}\r\n\r\nexport const createTask = (task, boardId, listIdx) => {\r\n  return {\r\n    type: CREATE_TASK,\r\n    payload: task,\r\n    boardId,\r\n    listIdx\r\n  }\r\n}\r\n\r\nexport const dragTask = (rmList, rmTask, addList, addTask, boardId) => {\r\n  return {\r\n    type: DRAG_TASK,\r\n    rmList,\r\n    rmTask,\r\n    addList,\r\n    addTask,\r\n    boardId\r\n  }\r\n}\r\n","export const CREATE_BOARD = 'CREATE_BOARD';\r\nexport const CREATE_LIST = 'CREATE_LIST';\r\nexport const CREATE_TASK = 'CREATE_TASK';\r\nexport const DRAG_TASK = 'DRAG_TASK';\r\n","import BoardItem from './board-item';\r\n\r\nexport default BoardItem;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './board-item.scss';\r\n\r\nconst BoardItem = ({ title, id }) => {\r\n  const remotePath = `/boards/${id}`;\r\n\r\n  return (\r\n    <li className=\"board__item\">\r\n      <Link className=\"board__link\" to={remotePath}>\r\n        <div className=\"board__wrapper\">\r\n          <div className=\"board__inner\">\r\n            <p>{ title }</p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default BoardItem;\r\n","import BoardsRow from './boards-row';\r\n\r\nexport default BoardsRow;\r\n","import React from 'react';\r\nimport BoardItem from '../../containers/board-item';\r\n\r\nconst BoardsRow = ({ boards }) => {\r\n\r\n  if (boards.length === 0) {\r\n    return (\r\n      <h1>No desks</h1>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ul className=\"board__list\">\r\n      {\r\n        boards.map(({ id, title }, idx) => {\r\n          return (\r\n            <BoardItem\r\n              key={idx}\r\n              title={title}\r\n              id={id}\r\n           />\r\n          );\r\n        })\r\n      }\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default BoardsRow;\r\n","import MainPage from './main-page';\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport BoardCreator from '../../containers/board-creator'\r\nimport BoardsRow from '../boards-row';\r\n\r\nconst MainPage = ({ boards }) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"main-page__title\">Для начала работы выберите доску</h1>\r\n      <BoardCreator />\r\n      <BoardsRow boards={boards}/>\r\n     </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = ({ boards }) => {\r\n  return {\r\n    boards\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainPage);\r\n","import PageNotFound from './page-not-found';\r\n\r\nexport default PageNotFound;\r\n","import React from 'react';\r\n\r\nconst PageNotFound = () => {\r\n  return (\r\n    <div className=\"page_404\">\r\n      <h1 className=\"title_not-found\">404</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageNotFound;\r\n","import CellCreator from './cell-creator';\r\n\r\nexport default CellCreator;\r\n","import React, { Component } from 'react';\r\nimport './cell-creator.css';\r\n\r\nclass CellCreator extends Component {\r\n  state = {\r\n    cellName: '',\r\n    addMode: false\r\n  }\r\n\r\n  addNewList = () => {\r\n    const { createList, currentBoardId } = this.props;\r\n\r\n    createList(this.state.cellName, currentBoardId);\r\n    this.setState({ cellName: '' });\r\n  }\r\n\r\n  onCellChange = (e) => {\r\n    this.setState({ cellName: e.target.value })\r\n  }\r\n\r\n  toggleAddMode = () => {\r\n    this.setState({ addMode: !this.state.addMode })\r\n  }\r\n\r\n  render () {\r\n    const { currentBoardId } = this.props;\r\n    const { addMode, cellName } = this.state;\r\n\r\n    if (addMode) {\r\n      return (\r\n        <div className=\"list-block cell-creator\">\r\n          <div className=\"list-block__inner\">\r\n            <input type=\"text\"\r\n              className=\"input-task task\"\r\n              placeholder=\"Введите название колонки\"\r\n              value={cellName}\r\n              onChange={this.onCellChange}\r\n            />\r\n\r\n          <div className=\"flex\">\r\n            <button\r\n              className=\"button button_green\"\r\n              onClick={() => this.addNewList(cellName, currentBoardId)}>\r\n              Добавить колонку\r\n            </button>\r\n\r\n            <button className=\"button button_close\" onClick={this.toggleAddMode}></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className=\"list-block cell-creator\">\r\n        <div className=\"list-block__inner\">\r\n          <button className=\"button button_add\" onClick={this.toggleAddMode}>Добавить еще одну колонку</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CellCreator;\r\n","import TaskCreator from './task-creator';\r\n\r\nexport default TaskCreator;\r\n","import React, { Component } from 'react';\r\nimport './task-creator.scss';\r\n\r\nclass TaskCreator extends Component {\r\n  state = {\r\n    taskName: '',\r\n    addTaskActive: false\r\n  }\r\n\r\n  toggleAddTask = () => {\r\n    this.setState({ addTaskActive: !this.state.addTaskActive })\r\n  }\r\n\r\n  onTaskChange = (e) => {\r\n    this.setState({ taskName: e.target.value })\r\n  }\r\n\r\n  createTask = (taskName, boardId, listIdx) => {\r\n    this.props.createTask(taskName, boardId, listIdx);\r\n    this.setState({ taskName: '' });\r\n  }\r\n\r\n  render () {\r\n    const { boardId, listIdx } = this.props;\r\n    const { addTaskActive, taskName } = this.state;\r\n\r\n    if (addTaskActive) {\r\n      return (\r\n        <div className=\"task-creator\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Введите название карточки\"\r\n            className=\"input-creator\"\r\n            value={taskName}\r\n            onChange={this.onTaskChange}\r\n          />\r\n\r\n          <div className=\"flex\">\r\n            <button\r\n              className=\"button button_green\"\r\n              onClick={() => this.createTask(taskName, boardId, listIdx)}>\r\n              Добавить задание\r\n            </button>\r\n            <button\r\n              className=\"button button_close\"\r\n              onClick={this.toggleAddTask}></button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <button className=\"button button_add\"\r\n      onClick={this.toggleAddTask}>Добавить еще одну карточку</button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskCreator;\r\n","import TaskItem from './task-item';\r\n\r\nexport default TaskItem;\r\n","import React, {Component} from 'react';\r\n\r\nclass TaskItem extends Component {\r\n  render () {\r\n    const {\r\n      listIdx, idx, elements, dragStart,\r\n       dragEnter, dragEnd, currentDragIdx,\r\n       dragMode, marginHeight, addList,\r\n        lastTask, task } = this.props;\r\n\r\n    let marginT = 0;\r\n    let marginB = 8;\r\n\r\n    if (dragMode && listIdx === addList) {\r\n      if (currentDragIdx === idx && !lastTask) {\r\n          marginT = marginHeight;\r\n      } else if (idx === elements.length - 1 && lastTask) {\r\n        marginB = marginHeight;\r\n      }\r\n    }\r\n\r\n    const dragStyle = {\r\n      marginTop:marginT + 'px',\r\n      marginBottom:marginB + 'px'\r\n    }\r\n\r\n    return (\r\n      <React.Fragment key={idx}>\r\n        <div\r\n          style={dragStyle}\r\n          className=\"task\"\r\n          draggable\r\n          onDragStart={(e) => dragStart(e, idx, listIdx)}\r\n          onDragEnter={(e) => dragEnter(e, idx, listIdx)}\r\n          onDragEnd={() => dragEnd()}>\r\n            <p className=\"task__item\">{ task }</p>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskItem;\r\n","import TaskRow from './task-row';\r\n\r\nexport default TaskRow;\r\n","import React from 'react';\r\nimport TaskItem from '../../containers/task-item';\r\n\r\nconst TaskRow = (props) => {\r\n  const renderTasks = props.elements.map((task, idx) => {\r\n      return (\r\n        <TaskItem\r\n          {...props}\r\n          dragStart={props.dragStart}\r\n          dragEnter={props.dragEnter}\r\n          dragEnd={props.dragEnd}\r\n          task={task}\r\n          idx={idx}\r\n          key={idx}\r\n        />\r\n      );\r\n    });\r\n\r\n    return renderTasks\r\n}\r\n\r\nexport default TaskRow;\r\n","import React from 'react';\r\n\r\nconst LastTask = (props) => {\r\n  return (\r\n      <span\r\n        className=\"task_last\"\r\n        draggable\r\n        onDragEnter={props.onDragEnter}>\r\n      </span>\r\n  );\r\n}\r\n\r\nexport default LastTask;\r\n","import ListRow from './list-row';\r\n\r\nexport default ListRow;\r\n","import React, { Component } from 'react';\r\nimport TaskCreator from '../task-creator';\r\nimport TaskRow from '../../components/task-row';\r\nimport LastTask from './last-task';\r\n\r\nimport './list-row.scss';\r\n\r\nclass ListRow extends Component {\r\n\r\n  state = {\r\n    currentDragIdx: 0,\r\n    dragMode: false,\r\n    marginHeight: 0,\r\n    editListIdx: null,\r\n    lastTask: false,\r\n    rmTask: null,\r\n    rmList: null,\r\n    addTask: null,\r\n    addList: null\r\n  }\r\n\r\n  dragStart = (e, idx, listIdx) => {\r\n    this.setState({\r\n      rmTask: idx,\r\n      rmList: listIdx,\r\n      marginHeight: e.currentTarget.offsetHeight + 20\r\n    });\r\n  }\r\n\r\n  dragEnter = (e, idx, listIdx) => {\r\n      this.setState({\r\n        dragMode: true,\r\n        currentDragIdx: idx,\r\n        lastTask: false,\r\n        editListIdx: listIdx,\r\n        addTask: idx\r\n      });\r\n  }\r\n\r\n  onListDrag = (listIdx) => {\r\n    this.setState({ addList: listIdx })\r\n  }\r\n\r\n  onLastTaskEnter = (lastTaskIdx) => {\r\n    this.setState({\r\n      lastTask: true,\r\n      addTask: lastTaskIdx\r\n    })\r\n  }\r\n\r\n  dragEnd = () => {\r\n    const { rmList, rmTask, addList, addTask } = this.state;\r\n\r\n    this.setState({ dragMode: false });\r\n    this.props.dragTask(rmList, rmTask, addList, addTask, this.props.boardId);\r\n  }\r\n\r\n  render () {\r\n   const { board: { cells, id }, createTask } = this.props;\r\n\r\n    const renderLists = ({ title, elements }, idx, boardId, fn) => {\r\n      return (\r\n        <div key={idx}\r\n          className=\"list-block\"\r\n          onDragEnter={() => this.onListDrag(idx)}>\r\n          <div className=\"list-block__inner\">\r\n            <div className=\"tasks\">\r\n              <p className=\"list-title\">{ title }</p>\r\n              <TaskRow\r\n                elements={elements}\r\n                listIdx={idx}\r\n                dragStart={this.dragStart}\r\n                dragEnter={this.dragEnter}\r\n                dragEnd={this.dragEnd}\r\n                {...this.state}\r\n              />\r\n              <LastTask onDragEnter={() => this.onLastTaskEnter(elements.length) } />\r\n            </div>\r\n            <TaskCreator\r\n              boardId={boardId}\r\n              listIdx={idx}\r\n              createTask={fn} />\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className=\"flex\">\r\n        { cells.map((c, idx) => renderLists(c, idx, id, createTask)) }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListRow;\r\n","import BoardPage from './board-page';\r\n\r\nexport default BoardPage;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PageNotFound from '../page-not-found';\r\nimport CellCreator from '../../containers/cell-creator';\r\nimport ListRow from '../../containers/list-row';\r\nimport { createList, createTask, dragTask } from '../../actions';\r\n\r\nconst BoardPage = ({ match: { params: { id } },\r\n   createTask, dragTask, createList, boards }) => {\r\n\r\n    const currentBoard = boards.find((b) => +id === b.id );\r\n\r\n    if (!currentBoard) {\r\n      return <PageNotFound />\r\n    }\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"flex list-wrapper\">\r\n          <ListRow\r\n            board={currentBoard}\r\n            createTask={createTask}\r\n            dragTask={dragTask}\r\n            boardId={id}\r\n          />\r\n\r\n          <CellCreator\r\n            currentBoardId={id}\r\n            createList={createList}\r\n            cells={currentBoard.cells}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createList: (title, boardId) => {\r\n      dispatch(createList(title, boardId))\r\n    },\r\n    createTask: (task, boardId, listIdx) => {\r\n      dispatch(createTask(task, boardId, listIdx))\r\n    },\r\n    dragTask: (rmList, rmTask, addList, addTask, boardId) => {\r\n      dispatch(dragTask(rmList, rmTask, addList, addTask, boardId))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(({boards}) => ({ boards }),mapDispatchToProps)(BoardPage);\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport MainPage from '../main-page';\r\nimport BoardPage from '../board-page';\r\nimport PageNotFound from '../page-not-found';\r\n\r\nimport './app.scss';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Switch>\r\n      <Route\r\n       path=\"/\"\r\n       component={MainPage}\r\n       exact\r\n      />\r\n\r\n      <Route\r\n       path=\"/boards/\"\r\n       component={BoardPage}\r\n       exact\r\n      />\r\n\r\n      <Route\r\n       path=\"/boards/:id\"\r\n       component={BoardPage}\r\n      />\r\n\r\n      <Route\r\n       component={PageNotFound}\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n  boards: [{\r\n    id: 0,\r\n    title: 'Доска номер 1',\r\n    cells: [\r\n      {\r\n        title: 'План на месяц',\r\n        elements: [\r\n          \"Попасть на стажировку вк\",\r\n          \"Пройти курс по React\",\r\n          \"Записаться на курсы английского языка, чтобы уехать жить в Лондон\",\r\n          \"Сделать бекенд своего сайта на node.js\",\r\n          \"Понять, что ты фронтендер и бекенд не пишешь\",\r\n          \"Расстроиться\",\r\n          \"Начать учить бекенд?\"\r\n        ]\r\n      },\r\n      {\r\n        title: 'План на день',\r\n        elements: [\r\n          \"Отрефакторить код\",\r\n          \"Забронировать тур на субботу\",\r\n          \"Заполнить localStorage, чтобы человек, проверяющий эту работу (надеюсь такой будет :D), не парился на счет того, чтобы самому все заполнять\",\r\n          \"Но это конечно-же можно сделать и самому, если есть желание\"\r\n        ]\r\n      },\r\n    ]\r\n  }]\r\n}\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return initialState;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch(err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n}\r\n","import { loadState } from '../localStorage';\r\n\r\nconst initialState = loadState();\r\n\r\nconst createBoard = (state, action) => {\r\n\r\n  const newBoard = {\r\n    id: state.boards.length,\r\n    title: action.payload,\r\n    cells: []\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    boards: [\r\n      ...state.boards,\r\n      newBoard\r\n    ]\r\n  }\r\n}\r\n\r\nconst createList = (state, action) => {\r\n  const { boardId, payload } = action;\r\n\r\n  const needBoard = state.boards.find((b) => {\r\n    return b.id === +boardId;\r\n  });\r\n\r\n  const newList = {\r\n    title: payload,\r\n    elements: []\r\n  }\r\n\r\n  const newBoardList = {\r\n    ...needBoard,\r\n    cells: [\r\n      ...needBoard.cells,\r\n      newList\r\n    ]\r\n  }\r\n\r\n  const newBoards = [\r\n    ...state.boards.slice(0, parseInt(boardId)),\r\n    newBoardList,\r\n    ...state.boards.slice(parseInt(boardId) + 1)\r\n  ];\r\n\r\n  return {\r\n    ...state,\r\n    boards: newBoards\r\n  }\r\n}\r\n\r\nconst createTask = (state, action) => {\r\n  const { boardId, listIdx, payload } = action;\r\n\r\n  const needList = state.boards\r\n    .find((b) => b.id === +boardId).cells[listIdx].elements;\r\n\r\n  const allCells = state.boards\r\n    .find((b) => b.id === +boardId).cells;\r\n\r\n  const newList = [\r\n    ...needList,\r\n    payload\r\n  ];\r\n\r\n  const needCells = state.boards\r\n    .find((b) => b.id === +boardId)\r\n    .cells[listIdx];\r\n\r\n  const newCells = {\r\n    ...needCells,\r\n    elements: newList\r\n  };\r\n\r\n  const allNewCells = [\r\n    ...allCells.slice(0, listIdx),\r\n    newCells,\r\n    ...allCells.slice(listIdx + 1)\r\n  ];\r\n\r\n  const needBoard = state.boards\r\n    .find((b) => b.id === +boardId);\r\n\r\n  const newBoards = {\r\n    ...needBoard,\r\n    cells: allNewCells\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    boards: [\r\n      ...state.boards.slice(0, boardId),\r\n      newBoards,\r\n      ...state.boards.slice(boardId + 1)\r\n    ]\r\n  }\r\n}\r\n\r\nconst dragTask = (state, action) => {\r\n  const { rmList, rmTask, addList, addTask, boardId } = action;\r\n\r\n  if (rmList === addList && rmTask === addTask) {\r\n    return state;\r\n  }\r\n\r\n  const removedTask = state.boards[boardId].cells[rmList].elements[rmTask];\r\n  const choosenTasksArr = state.boards[boardId].cells[addList].elements;\r\n  const choosenTasksCell = state.boards[boardId].cells[addList];\r\n\r\n\r\n  let newAddTasks = [];\r\n  if (addTask === 0) {\r\n    newAddTasks = [removedTask, ...choosenTasksArr];\r\n  } else if (addTask === choosenTasksArr.length) {\r\n    newAddTasks = [...choosenTasksArr, removedTask];\r\n  } else {\r\n    newAddTasks = [\r\n      ...choosenTasksArr.slice(0, addTask),\r\n      removedTask,\r\n      ...choosenTasksArr.slice(addTask)\r\n    ]\r\n  }\r\n\r\n  const newCellAdd = {\r\n    ...choosenTasksCell,\r\n    elements: newAddTasks\r\n  }\r\n\r\n  let newListsArray = [\r\n      ...state.boards[boardId].cells.slice(0, addList),\r\n      newCellAdd,\r\n      ...state.boards[boardId].cells.slice(addList + 1)\r\n    ];\r\n\r\n  const newBoard = {\r\n    ...state.boards[boardId],\r\n    cells: newListsArray\r\n  };\r\n\r\n  const newBoards = [\r\n    ...state.boards.slice(0, boardId),\r\n    newBoard,\r\n    ...state.boards.slice(boardId + 1)\r\n  ]\r\n\r\n  const newState = {\r\n    ...state,\r\n    boards: newBoards\r\n  }\r\n\r\n  const removingCell = newState.boards[boardId].cells[rmList];\r\n\r\n  let newRmTasks = [];\r\n  if (rmList === addList && rmTask < addTask) {\r\n    newRmTasks = [\r\n      ...removingCell.elements.slice(0, rmTask),\r\n      ...removingCell.elements.slice(rmTask + 1)\r\n    ]\r\n  } else if (rmList === addList && rmTask > addTask) {\r\n    newRmTasks = [\r\n      ...removingCell.elements.slice(0, rmTask + 1),\r\n      ...removingCell.elements.slice(rmTask + 2)\r\n    ]\r\n\r\n  } else if (rmTask === 0) {\r\n    newRmTasks = [...removingCell.elements.slice(rmTask + 1)];\r\n  } else if (rmTask === removingCell.elements.length - 1) {\r\n    newRmTasks = [...removingCell.elements.slice(0, rmTask)];\r\n  } else {\r\n    newRmTasks = [\r\n      ...removingCell.elements.slice(0, rmTask),\r\n      ...removingCell.elements.slice(rmTask + 1)\r\n    ]\r\n  }\r\n\r\n  const newRmCell = {\r\n    ...removingCell,\r\n    elements: newRmTasks\r\n  }\r\n\r\n  let newRmLists = [\r\n    ...newState.boards[boardId].cells.slice(0, rmList),\r\n    newRmCell,\r\n    ...newState.boards[boardId].cells.slice(rmList + 1)\r\n  ];\r\n\r\n  const newRmBoard = {\r\n    ...newState.boards[boardId],\r\n    cells: newRmLists\r\n  };\r\n\r\n  const newRmBoards = [\r\n    ...newState.boards.slice(0, boardId),\r\n    newRmBoard,\r\n    ...newState.boards.slice(boardId + 1)\r\n  ]\r\n\r\n  return {\r\n    ...state,\r\n    boards: newRmBoards\r\n  }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case 'CREATE_BOARD':\r\n      return createBoard(state, action);\r\n\r\n    case 'CREATE_LIST':\r\n      return createList(state, action);\r\n\r\n    case 'CREATE_TASK':\r\n      return createTask(state, action);\r\n\r\n    case 'DRAG_TASK':\r\n      return dragTask(state, action);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers';\r\nimport { saveState } from './localStorage';\r\n\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  applyMiddleware(thunk)\r\n);\r\n\r\nstore.subscribe(() => {\r\n  saveState(store.getState());\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/app';\r\n\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>, document.getElementById('root'));\r\n"],"sourceRoot":""}